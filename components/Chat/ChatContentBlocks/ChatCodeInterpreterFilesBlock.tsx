import ExpansionComponent from "@/components/Chat/ExpansionComponent";
import {Conversation, Message} from "@/types/chat";
import ChatCodeInterpreter from "@/components/Chat/ChatContentBlocks/ChatCodeInterpreter";
import React from "react";


interface FileInfo {
    type: string;
    values: {
      file_key: string;
      presigned_url: string;
      file_size: number;
      file_key_low_res?: string;
      presigned_url_low_res?: string;
    };
  }


interface Props {
    messageIsStreaming: boolean;
    message: Message;
    selectedConversation: Conversation | undefined;
    updateConversation: (c: Conversation) => void;
}

const THREAD_ERROR = 'thread';

const ChatCodeInterpreterFileBlock: React.FC<Props> = (
    {message, messageIsStreaming, selectedConversation, updateConversation
    }) => {

    const conatinsError = message.data?.state?.codeInterpreter?.error;
    if (conatinsError && !messageIsStreaming) console.log("Code Interpreter Error: ", conatinsError);
     // i find once a run on a thread is marked incomplete/failed/requires_action etc it will not work if you try again right away, better to just start with a new thread
    let codeInterpreterNeedsNewThread = conatinsError === THREAD_ERROR;
     
    if (codeInterpreterNeedsNewThread && selectedConversation) {
        const updatedMessages = selectedConversation.messages.map((m: Message) => {
                            const state = m.data?.state?.codeInterpreter;
                            if ( state?.threadId ) delete m.data.state.codeInterpreter.threadId;
                            if ( m.id === message.id && state && state.error) delete m.data.state.codeInterpreter.error;
                            return m;
        });
        updateConversation({...selectedConversation, messages: updatedMessages});
    }

    const files = message.data?.state?.codeInterpreter?.content ?? [];
    if (messageIsStreaming || (Object.keys(files).length === 0 && (!conatinsError || conatinsError === THREAD_ERROR))){
        return <></>;
    }

    
    return <div className="mt-3">
                {Object.keys(files).length > 0 &&
                <ExpansionComponent title="Generated Files"
                    content={files.map((file: FileInfo, index: number) => (
                        <ChatCodeInterpreter
                            key={index}
                            file_info={file} />
                        
                ))}/>}
                {conatinsError && conatinsError !== THREAD_ERROR &&
                <label className="text-red-500"> 
                        An error occurred with the code interpreter. The response was generated by Amplify.
                </label>}
            </div>;
};

export default ChatCodeInterpreterFileBlock;


