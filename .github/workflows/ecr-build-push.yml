name: Build and Push to ECR
  
on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (dev or prod)'
        required: true
        default: 'dev'
  
env:  # Note: This will set environment variables for the entire workflow
  DEV_ECR_REPOSITORY: dev-gen-ai-image      
  PROD_ECR_REPOSITORY: prod-gen-ai-image

jobs:
  build-and-push-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod')
    environment: production
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials from production secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
      - uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG_LATEST: latest
          IMAGE_TAG_DATE: ${{ env.DATE }}
          ECR_REPO: ${{ secrets.PROD_ECR_REPOSITORY }}
        run: |
          IMAGE_URI="${ECR_REGISTRY}/${ECR_REPO}"
          docker build -t $IMAGE_URI:latest . 
          docker tag $IMAGE_URI:latest $IMAGE_URI:$IMAGE_TAG_DATE
          docker push $IMAGE_URI:$IMAGE_TAG_LATEST
          docker push $IMAGE_URI:$IMAGE_TAG_DATE
  build-and-push-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    environment: development
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials from development secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
      - name: Login to Amazon ECR
        id: login-ecr  # Adding an id here to reference in the next steps
        uses: aws-actions/amazon-ecr-login@v1
          
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          LATEST_TAG: latest
        run: |                     
          docker build -t $ECR_REGISTRY/$DEV_ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$DEV_ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$DEV_ECR_REPOSITORY:$LATEST_TAG
          docker push $ECR_REGISTRY/$DEV_ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$DEV_ECR_REPOSITORY:$LATEST_TAG
          echo "image=$ECR_REGISTRY/$DEV_ECR_REPOSITORY:$IMAGE_TAG"
          echo "image=$ECR_REGISTRY/$DEV_ECR_REPOSITORY:$LATEST_TAG"